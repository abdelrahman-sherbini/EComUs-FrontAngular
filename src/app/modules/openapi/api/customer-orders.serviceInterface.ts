/**
 * E-Commerce Application
 *
 * Contact: sad@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { CheckOutOrderDTO } from '../model/models';
import { OrderDTO } from '../model/models';
import { PagedResponseOrderDTO } from '../model/models';


import { Configuration }                                     from '../configuration';



export interface CustomerOrdersServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: Configuration;

    /**
     * 
     * 
     * @param id 
     */
    cancelOrder(id: number, extraHttpRequestParams?: any): Observable<OrderDTO>;

    /**
     * 
     * 
     * @param checkOutOrderDTO 
     */
    createOrder(checkOutOrderDTO: CheckOutOrderDTO, extraHttpRequestParams?: any): Observable<OrderDTO>;

    /**
     * 
     * 
     * @param id 
     */
    getOrderById(id: number, extraHttpRequestParams?: any): Observable<OrderDTO>;

    /**
     * 
     * 
     * @param pageNum 
     * @param pageSize 
     * @param sortField Field to sort by. Allowed values: address, payType, orderId, price, user, status
     * @param sortDir Sort direction
     * @param keyword Keyword to search across multiple fields
     * @param priceMin Filter by priceMin
     * @param priceMax Filter by priceMax
     * @param orderIdMax Filter by order ID MAX
     * @param orderIdMin Filter by order ID MIN
     * @param address Filter by address
     * @param status Filter by OrderStatus
     * @param payType Filter by payment type
     * @param userId Filter by userId
     */
    getOrders(pageNum?: number, pageSize?: number, sortField?: 'address' | 'payType' | 'orderId' | 'price' | 'user' | 'status', sortDir?: 'asc' | 'desc', keyword?: any, priceMin?: any, priceMax?: any, orderIdMax?: any, orderIdMin?: any, address?: any, status?: 'CANCELED' | 'COMPLETED' | 'PROCESSING' | 'SHIPPED', payType?: 'CASH' | 'CREDIT', userId?: any, extraHttpRequestParams?: any): Observable<PagedResponseOrderDTO>;

}
